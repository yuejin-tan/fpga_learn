<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\led.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\led.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Feb 24 01:00:57 2024
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SCD_CMD_SET &rArr; atof_tyj &rArr; _cz_strtoxl
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[e]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">ADC_Handler</a><BR>
 <LI><a href="#[72]">UART_ReceiveData</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">UART_ReceiveData</a><BR>
 <LI><a href="#[55]">SCO_VAR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">SCO_VAR</a><BR>
 <LI><a href="#[54]">SCO_get</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[54]">SCO_get</a><BR>
 <LI><a href="#[74]">UART_SendData</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[74]">UART_SendData</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e]">ADC_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[10]">DMACINTERR_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[12]">DMACINTR_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[11]">DMACINTTC_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[17]">DUALTIMER_HANDLER</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[40]">EXT0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[4a]">EXT10_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[4b]">EXT11_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[4c]">EXT12_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1a]">EXT13_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1b]">EXT14_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1c]">EXT15_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[41]">EXT1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[42]">EXT2_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[43]">EXT3_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[44]">EXT4_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[45]">EXT5_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[46]">EXT6_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[47]">EXT7_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[48]">EXT8_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[49]">EXT9_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3d]">I2C_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3e]">MPS2_SSP0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3f]">MPS2_SSP1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1d]">PORT0_0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[27]">PORT0_10_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[28]">PORT0_11_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[29]">PORT0_12_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2a]">PORT0_13_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2b]">PORT0_14_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2c]">PORT0_15_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2d]">PORT0_16_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2e]">PORT0_17_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2f]">PORT0_18_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[30]">PORT0_19_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1e]">PORT0_1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[31]">PORT0_20_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[32]">PORT0_21_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[33]">PORT0_22_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[34]">PORT0_23_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[35]">PORT0_24_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[36]">PORT0_25_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[37]">PORT0_26_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[38]">PORT0_27_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[39]">PORT0_28_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3a]">PORT0_29_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1f]">PORT0_2_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3b]">PORT0_30_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3c]">PORT0_31_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[20]">PORT0_3_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[21]">PORT0_4_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[22]">PORT0_5_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[23]">PORT0_6_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[24]">PORT0_7_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[25]">PORT0_8_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[26]">PORT0_9_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[13]">PORT0_COMB_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[53]">SCD_CMD_CALL</a> from scd.o(i.SCD_CMD_CALL) referenced from scd.o(.data)
 <LI><a href="#[51]">SCD_CMD_CHG</a> from scd.o(i.SCD_CMD_CHG) referenced from scd.o(.data)
 <LI><a href="#[50]">SCD_CMD_CONF</a> from scd.o(i.SCD_CMD_CONF) referenced from scd.o(.data)
 <LI><a href="#[52]">SCD_CMD_DUMP</a> from scd.o(i.SCD_CMD_DUMP) referenced from scd.o(.data)
 <LI><a href="#[4f]">SCD_CMD_SET</a> from scd.o(i.SCD_CMD_SET) referenced from scd.o(.data)
 <LI><a href="#[56]">SCO_DEBUG</a> from scd.o(i.SCO_DEBUG) referenced from scd.o(.data)
 <LI><a href="#[57]">SCO_DUMP</a> from scd.o(i.SCO_DUMP) referenced from scd.o(.data)
 <LI><a href="#[58]">SCO_PRINT</a> from scd.o(i.SCO_PRINT) referenced from scd.o(.data)
 <LI><a href="#[55]">SCO_VAR</a> from scd.o(i.SCO_VAR) referenced from scd.o(.data)
 <LI><a href="#[54]">SCO_get</a> from scd.o(i.SCO_get) referenced from scd.o(.data)
 <LI><a href="#[9]">SVC_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[18]">Spare11_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[14]">Spare7_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from int_handlers.o(i.SysTick_Handler) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[4d]">SystemInit</a> from system_cm3ds.o(i.SystemInit) referenced from startup_cm3ds.o(.text)
 <LI><a href="#[15]">TIMER0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[16]">TIMER1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[d]">UART0_Handler</a> from int_handlers.o(i.UART0_Handler) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[f]">UART1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[19]">UARTOVF_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[59]">__main</a> from __main.o(!!!main) referenced from startup_cm3ds.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[59]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5a]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[8b]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5d]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[8d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[61]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[8e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[90]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[91]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[92]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[93]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[94]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[95]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[96]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[97]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[98]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[99]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[66]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a3]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a5]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[a6]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[a7]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[a8]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[5b]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[ab]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[5e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[60]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[ac]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[62]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; nvicInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6b]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[65]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[ae]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[67]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMACINTERR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMACINTR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMACINTTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DUALTIMER_HANDLER</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>EXT0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>EXT10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>EXT11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>EXT12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXT13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXT14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXT15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXT1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>EXT2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>EXT3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>EXT4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EXT5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EXT6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EXT7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>EXT8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>EXT9_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>I2C_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>MPS2_SSP0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>MPS2_SSP1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PORT0_0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PORT0_10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PORT0_11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PORT0_12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PORT0_13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PORT0_14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PORT0_15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PORT0_16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PORT0_17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PORT0_18_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>PORT0_19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PORT0_1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>PORT0_20_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PORT0_21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PORT0_22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PORT0_23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PORT0_24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PORT0_25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>PORT0_26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>PORT0_27_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>PORT0_28_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>PORT0_29_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PORT0_2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>PORT0_30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>PORT0_31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PORT0_3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PORT0_4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PORT0_5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PORT0_6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORT0_7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORT0_8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PORT0_9_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PORT0_COMB_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>Spare11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>Spare13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>Spare14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>Spare15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>Spare51_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>Spare52_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>Spare53_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>Spare54_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>Spare55_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>Spare56_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>Spare57_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>Spare58_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>Spare59_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>Spare60_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>Spare61_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>Spare62_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>Spare63_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>Spare7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UARTOVF_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[bf]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[64]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c2]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c3]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cm3ds_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[c6]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>NVIC_Init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, cm3ds_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvicInit
</UL>

<P><STRONG><a name="[80]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cm3ds_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[6e]"></a>SCD_Rev1Byte</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, scd.o(i.SCD_Rev1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SCD_Rev1Byte &rArr; SCD_cmd_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_cmd_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, int_handlers.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_cm3ds.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>UART0_Handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, int_handlers.o(i.UART0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART0_Handler &rArr; SCD_Rev1Byte &rArr; SCD_cmd_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_Rev1Byte
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITCLEAR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>UART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cm3ds_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>UART_ITCLEAR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cm3ds_uart.o(i.UART_ITCLEAR))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[83]"></a>UART_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cm3ds_uart.o(i.UART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[82]"></a>UART_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cm3ds_uart.o(i.UART_Init))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[72]"></a>UART_ReceiveData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cm3ds_uart.o(i.UART_ReceiveData))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
</UL>

<P><STRONG><a name="[74]"></a>UART_SendData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cm3ds_uart.o(i.UART_SendData))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>

<P><STRONG><a name="[63]"></a>main</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = main &rArr; nvicInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scd_send1Byte
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scd_init_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvicInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7a]"></a>nvicInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(i.nvicInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvicInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>scd_init_1</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, scd_reg.o(i.scd_init_1))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>scd_send1Byte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, scd.o(i.scd_send1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scd_send1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>uart0_init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main.o(i.uart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart0_init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof_tyj
</UL>

<P><STRONG><a name="[84]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof_tyj
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_get
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_VAR
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_DUMP
</UL>

<P><STRONG><a name="[c7]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_get
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_VAR
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_DUMP
</UL>

<P><STRONG><a name="[c8]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atof_pow10
</UL>

<P><STRONG><a name="[88]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[87]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[86]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof_tyj
</UL>

<P><STRONG><a name="[89]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[53]"></a>SCD_CMD_CALL</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scd.o(i.SCD_CMD_CALL))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SCD_CMD_CALL &rArr; cz_atol &rArr; _cz_strtoxl
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cz_atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>SCD_CMD_CHG</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scd.o(i.SCD_CMD_CHG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCD_CMD_CHG &rArr; cz_atol &rArr; _cz_strtoxl
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cz_atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>SCD_CMD_CONF</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, scd.o(i.SCD_CMD_CONF))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SCD_CMD_CONF &rArr; cz_atol &rArr; _cz_strtoxl
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cz_atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>SCD_CMD_DUMP</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, scd.o(i.SCD_CMD_DUMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCD_CMD_DUMP &rArr; cz_atol &rArr; _cz_strtoxl
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cz_atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>SCD_CMD_SET</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, scd.o(i.SCD_CMD_SET))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SCD_CMD_SET &rArr; atof_tyj &rArr; _cz_strtoxl
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cz_atol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof_tyj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>SCD_cmd_handle</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, scd.o(i.SCD_cmd_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCD_cmd_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_Rev1Byte
</UL>

<P><STRONG><a name="[56]"></a>SCO_DEBUG</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scd.o(i.SCO_DEBUG))
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>SCO_DUMP</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, scd.o(i.SCO_DUMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SCO_DUMP
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>SCO_PRINT</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, scd.o(i.SCO_PRINT))
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>SCO_VAR</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, scd.o(i.SCO_VAR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = SCO_VAR &rArr;  SCO_VAR (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_VAR
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_VAR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>SCO_get</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, scd.o(i.SCO_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = SCO_get &rArr;  SCO_get (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_get
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCO_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scd.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>_atof_pow10</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, scd.o(i._atof_pow10))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _atof_pow10 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof_tyj
</UL>

<P><STRONG><a name="[77]"></a>_cz_strtoxl</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, scd.o(i._cz_strtoxl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _cz_strtoxl
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cz_atol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof_tyj
</UL>

<P><STRONG><a name="[6d]"></a>atof_tyj</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, scd.o(i.atof_tyj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = atof_tyj &rArr; _cz_strtoxl
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cz_strtoxl
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atof_pow10
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_CMD_SET
</UL>

<P><STRONG><a name="[6c]"></a>cz_atol</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scd.o(i.cz_atol))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cz_atol &rArr; _cz_strtoxl
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cz_strtoxl
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_CMD_SET
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_CMD_DUMP
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_CMD_CONF
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_CMD_CHG
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCD_CMD_CALL
</UL>

<P><STRONG><a name="[8a]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[85]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
